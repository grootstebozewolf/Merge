/*===============================================================================
o     SCRIPT NAME:      001_CSP_GetShowPlanXML_CLRStoredProc.sql
o     BY:               Jeroen Bloemscheer
o     CREATE DATE:      2012-06-01
o     COMMENT:          This stored procedure is to batch analyse query's
o						Compile the file ClRStoredProc.cs with VS2008 command prompt first.
o						Next generate a target database from file import.txt generated by CreateScreen.exe.
o						After that press CTRL-SHIFT-M and fill in the principal and database.
o						Run this script as dbo.
o     VERSION:          0.1
o     SCHEMA:	        dbo
o     CUSTOMER:	        PWN         
o     TYPE DATABASE:    MSSQL
o
=================================================================================
o     INCIDENT NUMBER:
o     CHANGE DATE:
o     CHANGED BY:
o     CHANGE COMMENT:
===============================================================================*/
EXEC sp_configure 'clr enabled', 1;
RECONFIGURE;
USE [master]
go
GRANT EXTERNAL ACCESS ASSEMBLY TO <principal,,[TENSINGSKS\jbloemscheer]>
ALTER DATABASE <target db,,pwn_client> SET TRUSTWORTHY ON
USE <target db,,pwn_client>
GO
CREATE ASSEMBLY Tensing
	FROM 'c:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\ClRStoredProc.dll'
	WITH PERMISSION_SET = EXTERNAL_ACCESS;
GO
CREATE PROCEDURE GetShowPlanXML
	 @SQL nvarchar(max)
	,@out XML OUT
	,@server nvarchar(4000)						= NULL
	,@database nvarchar(4000)					= NULL
	,@isIntegratedSecurity bit					= 1
	,@loginIfNotIntegrated nvarchar(4000)		= NULL
	,@passwordIfNotIntegrated nvarchar(4000)	= NULL
AS
EXTERNAL NAME Tensing."SqlLib.CLRStoredProc".GetShowPlanXML;
GO
CREATE PROCEDURE [dbo].[GetEstimatedExecutionPlanInfo]
(
	 @SQL nvarchar(max)
	,@server nvarchar(4000)						= NULL
	,@database nvarchar(4000)					= NULL
	,@isIntegratedSecurity bit					= 1
	,@loginIfNotIntegrated nvarchar(4000)		= NULL
	,@passwordIfNotIntegrated nvarchar(4000)	= NULL
)
AS
BEGIN

	--Use current connection as default
	IF @server IS NULL
		SET @server = (SELECT @@SERVERNAME)

	IF @database IS NULL
		SET @database = (SELECT DB_NAME())

	--Get XML from CLR Proc
	DECLARE @PlanXML xml

	EXEC [dbo].[GetShowPlanXML]
		 @SQL
		,@PlanXML OUTPUT
		,@server
		,@database
		,@isIntegratedSecurity
		,@loginIfNotIntegrated
		,@passwordIfNotIntegrated

	--Return Plan
	SELECT @PlanXML AS PlanXML

	--Return info about Plan
	;WITH XMLNAMESPACES ('http://schemas.microsoft.com/sqlserver/2004/07/showplan' AS sql)
	SELECT
		 ro.relop.value('@NodeId', 'int')					AS NodeId
		,ro.relop.value('@PhysicalOp', 'nvarchar(200)')		AS PhysicalOp
		,ro.relop.value('@LogicalOp', 'nvarchar(200)')		AS LogicalOp
		,(ro.relop.value('@EstimateRows', 'float')
			* (ro.relop.value('@EstimateRewinds', 'float')
			+  ro.relop.value('@EstimateRebinds', 'float')
			+ 1.0))											AS EstimateRows
		,CAST(ro.relop.exist('*/sql:RelOp') AS bit)			AS IsNotLeaf
	FROM @PlanXML.nodes('//sql:RelOp') AS ro(relop)

END
GO
